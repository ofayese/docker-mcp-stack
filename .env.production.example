# Docker MCP Stack - Production Environment Template
# Copy this file to .env and customize with your secure values
# This template includes enhanced security configurations

#
# SECURITY NOTICE
# ===============
# This file contains sensitive configuration values.
# Ensure strong, unique passwords and tokens for production use.
# Consider using external secret management systems for production.
#

#
# ENVIRONMENT CONFIGURATION
#

# Environment type (development, staging, production)
ENVIRONMENT=production

# Security mode (strict, moderate, development)
SECURITY_MODE=strict

# Debug mode (disable in production)
DEBUG_MODE=false

# Log level (error, warn, info, debug)
LOG_LEVEL=warn

#
# MODEL RUNNER SETTINGS
#

# Model ports (mapped to host)
SMOLLM2_PORT=12434
LLAMA3_PORT=12435
PHI4_PORT=12436
QWEN3_PORT=12437
QWEN2_PORT=12438
MISTRAL_PORT=12439
GEMMA3_PORT=12440
GRANITE7_PORT=12441
GRANITE3_PORT=12442

# GPU settings (comma-separated list of GPU indices to use)
CUDA_DEVICES=0

# Resource limits for model runners
MODEL_MEMORY_LIMIT=4g
MODEL_CPU_LIMIT=2

#
# AUTHENTICATION & AUTHORIZATION
#

# API Authentication (generate with: openssl rand -hex 32)
API_SECRET_KEY=CHANGE_ME_GENERATE_SECURE_32_BYTE_KEY

# API Rate Limiting
API_RATE_LIMIT_ENABLED=true
API_RATE_LIMIT_REQUESTS=100
API_RATE_LIMIT_WINDOW=3600

# JWT Configuration
JWT_SECRET_KEY=CHANGE_ME_GENERATE_SECURE_JWT_SECRET
JWT_EXPIRATION_HOURS=24

#
# DATABASE SETTINGS
#

# PostgreSQL connection details
POSTGRES_DB=mcp_production
POSTGRES_USER=mcp_admin
# SECURITY: Use a strong password (min 12 chars, mixed case, numbers, symbols)
# Generate with: openssl rand -base64 32 | tr -d '=' | head -c 24
POSTGRES_PASSWORD=CHANGE_ME_SECURE_PASSWORD_2024!
POSTGRES_PORT=5432
POSTGRES_CONNECTION_STRING=postgresql://mcp_admin:CHANGE_ME_SECURE_PASSWORD_2024!@postgres:5432/mcp_production

# Database encryption
POSTGRES_SSL_MODE=require
POSTGRES_SSL_CERT=/etc/ssl/certs/postgres-client.crt
POSTGRES_SSL_KEY=/etc/ssl/private/postgres-client.key

#
# EXTERNAL SERVICE INTEGRATION
#

# GitHub integration (create token at https://github.com/settings/tokens)
# Required scopes: repo, read:org, read:user
GITHUB_TOKEN=ghp_CHANGE_ME_SECURE_GITHUB_TOKEN

# GitLab integration (create token at https://gitlab.com/-/profile/personal_access_tokens)
# Required scopes: api, read_user, read_repository
GITLAB_TOKEN=glpat_CHANGE_ME_SECURE_GITLAB_TOKEN

# Sentry integration (get DSN from your Sentry project settings)
SENTRY_DSN=https://CHANGE_ME_SENTRY_DSN@sentry.io/project-id

#
# WEB SERVER SETTINGS
#

# Nginx ports
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# SSL/TLS Configuration
SSL_ENABLED=true
DOMAIN_NAME=your-domain.com
EMAIL=admin@your-domain.com

# SSL Certificate paths
SSL_CERT_PATH=/etc/nginx/ssl/your-domain.crt
SSL_KEY_PATH=/etc/nginx/ssl/your-domain.key

# Security headers
ENABLE_SECURITY_HEADERS=true
HSTS_MAX_AGE=31536000
CSP_POLICY="default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self';"

#
# MONITORING SETTINGS
#

# Prometheus
PROMETHEUS_PORT=9090
PROMETHEUS_RETENTION_TIME=15d
PROMETHEUS_EXTERNAL_URL=https://prometheus.your-domain.com

# Grafana credentials
GRAFANA_PORT=3000
# SECURITY: Change default admin credentials
# Generate with: openssl rand -base64 20
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=CHANGE_ME_SECURE_GRAFANA_PASSWORD_2024!

# Grafana security
GRAFANA_SECURITY_ADMIN_USER=admin
GRAFANA_SECURITY_ADMIN_PASSWORD=CHANGE_ME_SECURE_GRAFANA_PASSWORD_2024!
GRAFANA_SECURITY_SECRET_KEY=CHANGE_ME_GRAFANA_SECRET_KEY
GRAFANA_USERS_ALLOW_SIGN_UP=false
GRAFANA_AUTH_ANONYMOUS_ENABLED=false

#
# BACKUP SETTINGS
#

# Backup configuration
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30
BACKUP_ENCRYPTION_ENABLED=true
# Generate with: openssl rand -base64 32
BACKUP_ENCRYPTION_KEY=CHANGE_ME_BACKUP_ENCRYPTION_KEY

# Backup schedule (cron format)
BACKUP_SCHEDULE_FULL="0 2 * * 0"       # Weekly on Sunday at 2 AM
BACKUP_SCHEDULE_INCREMENTAL="0 3 * * 1-6"  # Daily except Sunday at 3 AM

# Backup storage
BACKUP_STORAGE_TYPE=local  # local, s3, azure, gcs
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_S3_REGION=us-east-1
BACKUP_S3_ACCESS_KEY=CHANGE_ME_S3_ACCESS_KEY
BACKUP_S3_SECRET_KEY=CHANGE_ME_S3_SECRET_KEY

#
# DOCKER HUB AUTHENTICATION
#

# Docker Hub credentials (for private images or rate limit avoidance)
DOCKER_HUB_USERNAME=your_dockerhub_username
DOCKER_HUB_TOKEN=CHANGE_ME_DOCKERHUB_ACCESS_TOKEN

#
# NETWORK SECURITY
#

# Network configuration
NETWORK_SUBNET=172.20.0.0/16
ENABLE_INTERNAL_TLS=true

# Firewall rules (comma-separated list)
ALLOWED_IPS=127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# Health check intervals
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

#
# AUDIT AND COMPLIANCE
#

# Audit logging
AUDIT_LOG_ENABLED=true
AUDIT_LOG_LEVEL=info
AUDIT_LOG_RETENTION_DAYS=90

# Compliance settings
GDPR_COMPLIANCE_ENABLED=true
DATA_RETENTION_DAYS=365
ANONYMIZE_LOGS=true

#
# CUSTOM VOLUME PATHS (Optional)
#

# Uncomment and customize these paths if you want to use custom locations
# MODEL_CACHE_PATH=/path/to/model/cache
# POSTGRES_DATA_PATH=/path/to/postgres/data
# PROMETHEUS_DATA_PATH=/path/to/prometheus/data
# GRAFANA_DATA_PATH=/path/to/grafana/data
# BACKUP_PATH=/path/to/backups

#
# ADVANCED SETTINGS
#

# Container resource limits
ENABLE_RESOURCE_LIMITS=true
MAX_CONTAINER_MEMORY=8g
MAX_CONTAINER_CPU=4

# Security scanning
ENABLE_VULNERABILITY_SCANNING=true
SECURITY_SCAN_SCHEDULE="0 4 * * *"  # Daily at 4 AM

# Automatic updates
ENABLE_AUTO_UPDATES=false
AUTO_UPDATE_SCHEDULE="0 5 * * 0"  # Weekly on Sunday at 5 AM
